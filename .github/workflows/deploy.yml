name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{secrets.AWS_REGION}}
      
        mask-aws-account-id: 'false'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create ECR repository if it doesn't exist
      run: |
        aws ecr describe-repositories --repository-names fastapi-app || aws ecr create-repository --repository-name fastapi-app
    
    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: fastapi-app
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Install AWS CLI if not present
          if ! command -v aws &> /dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi
          
          # Configure AWS region
          aws configure set region \${{ secrets.AWS_REGION }}
          
          # Login to ECR
          aws ecr get-login-password --region \${{ secrets.AWS_REGION }} | sudo docker login --username AWS --password-stdin \${{ steps.login-ecr.outputs.registry }}
          sudo usermod -aG docker ec2-user
          sudo systemctl restart docker
          docker pull ${{ steps.login-ecr.outputs.registry }}/fastapi-app:latest
          docker stop fastapi-app || true
          docker rm fastapi-app || true
          docker run -d --name fastapi-app -p 8000:8000 ${{ steps.login-ecr.outputs.registry }}/fastapi-app:latest
